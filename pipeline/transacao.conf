input {

#  file {
#	path => "/importer/*"
#	start_position => "beginning"
#	add_field => { log_type => "file2" }
#	sincedb_write_interval => "1"
#  }

  s3 {
    bucket => "payreport-prod"
    access_key_id  => "AKIAJ4IEWIMXH27JGTJA"
	secret_access_key => "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"
	region => "sa-east-1"
	prefix => "PayReport/Files/PayGo/**/**/"
	backup_to_bucket => "payreport-processed-prod"
	delete => false
	sincedb_path => "/file/.sincedb"
 }

}

filter {
    csv {
        columns => ["data", "statusId", "status", "terminal", "redeId", "adquirente", "operacao", "operacaoId", "cartaoId", "financiamentoId", "plano", "dataPre", "bandeira", "moeda", "valor", "sequencial", "sessao", "referenciaLocal", "referenciaHost", "autorizacao", "dataOriginal", "refLocalOriginal", "refHostOriginal", "numeroLogico", "afiliacao", "mensagem", "documentoFiscal", "valorOriginal", "desconto", "troco", "solucao", "checkoutTipoId", "checkout", "confCheckout", "dadosAdicionais1", "dadosAdicionais2", "dadosAdicionais3", "dadosAdicionais4", "serialCH", "dadosEvento", "hash", "numCartao", "nomePortador", "devido", "path"]
        separator => "	"
        #remove_field => [ "redeId", "operacaoId", "cartaoId", "dataPre", "moeda", "sequencial", "sessao", "dataOriginal", "refLocalOriginal", "refHostOriginal", "valorOriginal", "desconto", "troco", "solucao", "checkoutTipoId", "confCheckout", "serialCH", "dadosEvento", "hash" ]
	}
	if ([data] == "v0002") {
        mutate {
            gsub => [ "statusId", "/\s/", "." ]
        }
		ruby{
            init => "
						@@userId = ''
						@@cnpj = ''
						@@nomeFantasia = ''
						@@razaoSocial = ''
						@@uf = ''
						@@cidade = ''
						@@lat = 0.00
						@@lon = 0.00
						@@geoLocation = Array.new
						@@fileName = ''
					"
            code => "@@userId = event.get('[statusId]')"
        }
        drop { }
	}else{
		mutate {
				add_field => { "nomeFantasia" => "NULL" }
		}
		mutate {
				add_field => { "razaoSocial" => "NULL" }
		}
		mutate {
				add_field => { "uf" => "NULL" }
		}
		mutate {
				add_field => { "cidade" => "NULL" }
		}
		mutate {
				add_field => { "geoLocation" => "NULL" }
		}

		if ([data] == "data/hora") {
			drop { }
		}
		if (![referenciaLocal]) {
			drop { }
		}
		if (![adquirente]) {
			drop { }
		}
		ruby{
			code => "event.set('usuario', @@userId)"
		}
		mutate {
			add_field => { "cnpj" => "NULL" }
		}
		mutate {
			gsub => [ "operacao", "[0-9]", "" ]
		}
		mutate {
			gsub => [ "valor", "\.", "" ]
		}
		mutate {
			gsub => [ "valor", ",", "." ]
		}
		mutate {
			gsub => [ "troco", "\.", "" ]
		}
		mutate {
			gsub => [ "troco", ",", "." ]
		}
		mutate {
			gsub => [ "desconto", "\.", "" ]
		}
		mutate {
			gsub => [ "desconto", ",", "." ]
		}
		mutate {
			gsub => [ "valorOriginal", "\.", "" ]
		}
		mutate {
			strip => ["status", "terminal", "adquirente", "operacao", "bandeira", "referenciaLocal", "referenciaHost", "autorizacao", "numeroLogico", "afiliacao", "mensagem", "checkout"]
		}
		mutate {
			uppercase => [ "bandeira", "checkout" ]
		}
		if ([bandeira] == "VISA CREDITO") {
			mutate {
				update => { "bandeira" => "VISA" }
			}
		}
		if ([adquirente] == "REDECARD") {
			mutate {
				update => { "adquirente" => "REDE" }
			}
		}
		if ([bandeira] == "VISA DEBITO") {
			mutate {
				update => { "bandeira" => "VISA ELECTRON" }
			}
		}
		if ([bandeira] == "VISA ELECTRO") {
			mutate {
				update => { "bandeira" => "VISA ELECTRON" }
			}
		}
		if ([bandeira] == "ELO_DEB") {
			mutate {
				update => { "bandeira" => "ELO DEBITO" }
			}
		}
		if ([bandeira] == "MASTERCARD C") {
			mutate {
				update => { "bandeira" => "MASTERCARD" }
			}
		}
		if ([bandeira] == "MASTERCARD D") {
			mutate {
				update => { "bandeira" => "MAESTRO" }
			}
		}
		if ([bandeira] == "AMERICAN EXP") {
			mutate {
				update => { "bandeira" => "AMEX" }
			}
		}
		if ([bandeira] == "CABAL DEBIT") {
			mutate {
				update => { "bandeira" => "CABAL DEBITO" }
			}
		}
		if (![plano]) {
			mutate {
				update => { "plano" => "1" }
			}
		}
		date {
				match => ["data", "dd/MM/YY HH:mm", "ISO8601"]
				timezone => "America/Sao_Paulo"
				target => "data"
		}

        mutate {
            add_field => {
              "path" => "%{[@metadata][s3][key]}"
            }
        }

        ruby {
            code => "require 'digest/md5';
            event.set('[@metadata][computed_id]', Digest::MD5.hexdigest(event.get('[message]')))"
        }

		ruby {
					code => "

						#if @@cnpj==''

                        @@fileName = '/file/servidor/' + event.get('usuario')

                        if File.exists?(@@fileName)

                                file = File.new(@@fileName, 'r')
                                if file.respond_to?('each')
                                    file.each do |row|
                                        data = row.split('=')

                                        if(data[0] == 'cnpj')
                                            @@cnpj = data[1].sub(/\n/, '')
                                        end
                                        if(data[0] == 'nomeFantasia')
                                            @@nomeFantasia = data[1].upcase.sub(/\n/, '')
                                        end
                                        if(data[0] == 'razaoSocial')
                                            @@razaoSocial = data[1].upcase.sub(/\n/, '')
                                        end
                                        if(data[0] == 'uf')
                                            @@uf = data[1].upcase.sub(/\n/, '')
                                        end
                                        if(data[0] == 'cidade')
                                            @@cidade = data[1].upcase.sub(/\n/, '')
                                        end
                                        if(data[0] == 'geoLocation')

                                            if data[1]
                                                coordinate = data[1].to_s.split(',')
                                                if coordinate[0]
                                                    @@lat = coordinate[0].sub(/\n/, '')
                                                end
                                                if coordinate[1]
                                                    @@lon = coordinate[1].sub(/\n/, '')
                                                end
                                            end

                                        end

                                    end
                                end

                        else
                            @@cnpj = ''
                            @@nomeFantasia = ''
                            @@razaoSocial = ''
                            @@uf = ''
                            @@cidade = ''
                            @@lat = 0.00
                            @@lon = 0.00
                            @@geoLocation = Array.new
                            @@fileName = ''
                        end
						#end
					"
		}
		ruby {
			code => "
				event.set('cnpj', @@cnpj)
				event.set('nomeFantasia', @@nomeFantasia)
				event.set('razaoSocial', @@razaoSocial)
				event.set('uf', @@uf)
				event.set('cidade', @@cidade)
				event.set('geoLocation', {
					'lat' => @@lat.to_f,
					'lon' => @@lon.to_f
				})
			"
		}

	}
}

output {
#	stdout { codec => rubydebug }
    elasticsearch {
        action => "index"
        hosts => "https://a010993755cbd53ac6a8a2f111b29772.sa-east-1.aws.found.io:9243"
        index => "pr"
		user => "elastic"
		document_type => "transacao"
		password => "AmJ5R7JKjiqL3HJvwTqAc0Wd"
		document_id => "%{[@metadata][computed_id]}"
    }
}